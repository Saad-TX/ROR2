name: Docker ECR Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      ECR_REGISTRY: ror-demo
      ECR_REPOSITORY: ror-demo
      EC2_INSTANCE_IP: 3.89.73.48
      EC2_INSTANCE_SSH_KEY: ${{ secrets.EC2_INSTANCE_SSH_KEY }}
      DOCKER_IMAGE_NAME: new-image

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    
    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: us-east-1
        
    - name: Login to Amazon ECR
      run: |
        aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}

    - name: Build and Push Docker Image to ECR
      run: |
        docker build -t ${{ env.DOCKER_IMAGE_NAME }} .
        docker tag ${{ env.DOCKER_IMAGE_NAME }} ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
        docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}

    - name: Deploy Docker Image to EC2 Instance
      run: |
        scp -i ${{ env.EC2_INSTANCE_SSH_KEY }} -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -r ./ec2-deployment ubuntu@${{ env.EC2_INSTANCE_IP }}:/home/ubuntu/
        ssh -i ${{ env.EC2_INSTANCE_SSH_KEY }} -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ubuntu@${{ env.EC2_INSTANCE_IP }} "cd /home/ubuntu/ec2-deployment && docker-compose up -d"
